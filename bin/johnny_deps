#!/bin/sh

# Copyright (c) 2013 VividCortex, Inc. All rights reserved.
# Please see the LICENSE file for applicable license terms.

set -eu

# The Godeps file is expected to have lines like so:
#
# github.com/VividCortex/robustly v2.6 master
#
# where the first element is the import path and the second is a tag
# in the project. There's an optional field, which is a branch, and any
# other trailing junk is ignored.

depfile="${1:-Godeps}"

# Look for Depfile in parent directories
if [ "${depfile%%/*}" != "/" ]; then # not absolute path
	where="$(/bin/pwd)"
	while [ "${where}" != '/' ]; do
		if [ -e "${where}/${depfile}" ]; then
			depfile="${where}/${depfile}"
			break
		fi
		where="${where%/*}" # dirname
	done
fi

# Trim comments from lines in Depfile; ignore empty lines
sed 's/#.*//;/^\s*$/d' "$depfile" \
	| while read package sha junk; do
	if [ -z "$package" -o -z "$sha" ]; then
		continue
	fi

	# First, see if we're already at this SHA/branch/tag; if so, don't
	# do a bunch of potentially messy things.
	if [ ! -e "${GOPATH%%:*}/src/${package%%/...}" ]; then
		echo ">> [johnny-deps] getting package "$package""
		go get -u -d "$package"
	fi
	cd "${GOPATH%%:*}/src/${package%%/...}"
	if [ "$(git rev-parse HEAD)" = "${sha}" -o "$(git rev-parse --abbrev-ref HEAD)" = "${sha}" ]; then
		continue
	fi

	# Check out the specified version. But, try to avoid detached HEAD, which
	# is annoying; if any branch's HEAD is the specified SHA, then check out the
	# branch instead.
	echo ">> [johnny-deps] setting $package to version $sha"
	if ! git checkout -q "$sha"; then
		git pull -q
		git checkout -q "$sha"
	fi
	git branch --contains "${sha}" | grep -v 'no branch' \
		| sed -e 's/^\* //' | while read branch; do
		if [ $(git rev-parse "$branch") = "$sha" ]; then
			echo ">> [johnny-deps] setting $package to branch $branch"
			git checkout -q "$branch"
		fi
	done
done
